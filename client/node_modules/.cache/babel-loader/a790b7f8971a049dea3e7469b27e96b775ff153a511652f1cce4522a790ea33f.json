{"ast":null,"code":"var _jsxFileName = \"/Users/TakakoOnozuka/codeclan/banana_batman/banana_batman/client/src/Components/PlaceholderSelect.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlaceholderSelect = _ref => {\n  let {\n    placeholders\n  } = _ref;\n  const placeholderSelect = placeholders.map(placeholder => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: placeholder.word\n    }, placeholder._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Placeholder Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 6\n    }, this), placeholderSelect]\n  }, void 0, true);\n};\n_c = PlaceholderSelect;\nexport default PlaceholderSelect;\nvar _c;\n$RefreshReg$(_c, \"PlaceholderSelect\");","map":{"version":3,"names":["PlaceholderSelect","placeholders","placeholderSelect","map","placeholder","word","_id"],"sources":["/Users/TakakoOnozuka/codeclan/banana_batman/banana_batman/client/src/Components/PlaceholderSelect.js"],"sourcesContent":["const PlaceholderSelect = ({placeholders}) => {\n    \n    const placeholderSelect = placeholders.map(placeholder => {\n        return (\n            <div key ={placeholder._id}>\n                \n                {placeholder.word}\n\n            </div>\n        )\n    }) \n    \n    return ( \n    <>       \n     <h1>Placeholder Select</h1>\n        {placeholderSelect}\n        </>\n\n     );\n}\n\n \nexport default PlaceholderSelect;"],"mappings":";;;AAAA,MAAMA,iBAAiB,GAAG,QAAoB;EAAA,IAAnB;IAACC;EAAY,CAAC;EAErC,MAAMC,iBAAiB,GAAGD,YAAY,CAACE,GAAG,CAACC,WAAW,IAAI;IACtD,oBACI;MAAA,UAEKA,WAAW,CAACC;IAAI,GAFVD,WAAW,CAACE,GAAG;MAAA;MAAA;MAAA;IAAA,QAIpB;EAEd,CAAC,CAAC;EAEF,oBACA;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,EACvBJ,iBAAiB;EAAA,gBACf;AAGX,CAAC;AAAA,KAnBKF,iBAAiB;AAsBvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}