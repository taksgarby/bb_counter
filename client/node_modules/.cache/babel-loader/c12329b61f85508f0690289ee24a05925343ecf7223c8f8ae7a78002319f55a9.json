{"ast":null,"code":"const baseURL = 'http://localhost:9000/api/instructor/';\nexport const getInstructors = () => {\n  return fetch(baseURL).then(res => res.json());\n};\nexport const instructorById = id => {\n  return fetch(baseURL + id).then(res => res.json());\n};\nexport const postInstructors = data => {\n  return fetch(baseURL, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n};\nexport const deleteInstructors = id => {\n  return fetch(baseURL + id, {\n    method: 'DELETE'\n  });\n};\nexport const updateInstructors = (id, data) => {\n  return fetch(baseURL + id, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n};","map":{"version":3,"names":["baseURL","getInstructors","fetch","then","res","json","instructorById","id","postInstructors","data","method","body","JSON","stringify","headers","deleteInstructors","updateInstructors"],"sources":["/Users/TakakoOnozuka/codeclan/banana_batman/banana_batman/client/src/Services/InstructorsService.js"],"sourcesContent":["const baseURL = 'http://localhost:9000/api/instructor/'\n\nexport const getInstructors = () => {\n    return fetch(baseURL)\n    .then(res => res.json())\n}\n\nexport const instructorById = (id) => {\n    return fetch(baseURL + id)\n    .then(res => res.json())\n    \n}\n\nexport const postInstructors = (data) => {\n    return fetch(baseURL, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: { 'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n}\n\nexport const deleteInstructors = (id) => {\n    return fetch(baseURL + id, {\n        method: 'DELETE'\n    }\n        )\n}\n\nexport const updateInstructors = (id, data) => {\n    return fetch(baseURL + id, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: { 'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n}\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uCAAuC;AAEvD,OAAO,MAAMC,cAAc,GAAG,MAAM;EAChC,OAAOC,KAAK,CAACF,OAAO,CAAC,CACpBG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIC,EAAE,IAAK;EAClC,OAAOL,KAAK,CAACF,OAAO,GAAGO,EAAE,CAAC,CACzBJ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;AAE5B,CAAC;AAED,OAAO,MAAMG,eAAe,GAAIC,IAAI,IAAK;EACrC,OAAOP,KAAK,CAACF,OAAO,EAAE;IAClBU,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IAC1BK,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB;EACjD,CAAC,CAAC,CACDX,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMU,iBAAiB,GAAIR,EAAE,IAAK;EACrC,OAAOL,KAAK,CAACF,OAAO,GAAGO,EAAE,EAAE;IACvBG,MAAM,EAAE;EACZ,CAAC,CACI;AACT,CAAC;AAED,OAAO,MAAMM,iBAAiB,GAAG,CAACT,EAAE,EAAEE,IAAI,KAAK;EAC3C,OAAOP,KAAK,CAACF,OAAO,GAAGO,EAAE,EAAE;IACvBG,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IAC1BK,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB;EACjD,CAAC,CAAC,CACDX,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}