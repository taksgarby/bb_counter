{"ast":null,"code":"var _jsxFileName = \"/Users/TakakoOnozuka/codeclan/banana_batman/banana_batman/client/src/Components/InstructorSelect.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InstructorSelect = _ref => {\n  let {\n    instructors\n  } = _ref;\n  const instructorSelect = instructors.map(instructor => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: instructor.name\n    }, instructor._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"        \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Instructor Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this), instructorSelect]\n  }, void 0, true);\n};\n_c = InstructorSelect;\nexport default InstructorSelect;\nvar _c;\n$RefreshReg$(_c, \"InstructorSelect\");","map":{"version":3,"names":["InstructorSelect","instructors","instructorSelect","map","instructor","name","_id"],"sources":["/Users/TakakoOnozuka/codeclan/banana_batman/banana_batman/client/src/Components/InstructorSelect.js"],"sourcesContent":["const InstructorSelect = ( {instructors} ) => {\n    \n    const instructorSelect = instructors.map(instructor => {\n        return (\n            <div key ={instructor._id}>\n                \n                {instructor.name}\n\n            </div>\n        )\n    }) \n    \n    return ( \n    <>        <h1>Instructor Select</h1>\n        {instructorSelect}\n        </>\n\n     );\n}\n \nexport default InstructorSelect;"],"mappings":";;;AAAA,MAAMA,gBAAgB,GAAG,QAAqB;EAAA,IAAnB;IAACC;EAAW,CAAC;EAEpC,MAAMC,gBAAgB,GAAGD,WAAW,CAACE,GAAG,CAACC,UAAU,IAAI;IACnD,oBACI;MAAA,UAEKA,UAAU,CAACC;IAAI,GAFTD,UAAU,CAACE,GAAG;MAAA;MAAA;MAAA;IAAA,QAInB;EAEd,CAAC,CAAC;EAEF,oBACA;IAAA,oCAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,EAC/BJ,gBAAgB;EAAA,gBACd;AAGX,CAAC;AAAA,KAlBKF,gBAAgB;AAoBtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}